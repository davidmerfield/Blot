name: node

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:6
        ports:
          - 6379:6379

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build test image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          target: dev
          load: true
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/blot
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/blot,mode=max
          tags: ghcr.io/${{ github.repository_owner }}/blot:test-${{ github.sha }}
    
      - name: Run tests
        env:
          BLOT_STRIPE_KEY: ${{ secrets.BLOT_STRIPE_KEY }}
          BLOT_STRIPE_SECRET: ${{ secrets.BLOT_STRIPE_SECRET }}
          BLOT_STRIPE_PRODUCT: ${{ secrets.BLOT_STRIPE_PRODUCT }}
        run: |
          docker run --rm \
            --network name=${{ job.services.redis.network }} \
            -e BLOT_REDIS_HOST=redis \
            -e BLOT_STRIPE_KEY=$BLOT_STRIPE_KEY \
            -e BLOT_STRIPE_SECRET=$BLOT_STRIPE_SECRET \
            -e BLOT_STRIPE_PRODUCT=$BLOT_STRIPE_PRODUCT \
            -v ${{ github.workspace }}/app:/usr/src/app/app \
            -v ${{ github.workspace }}/scripts:/usr/src/app/scripts \
            -v ${{ github.workspace }}/config:/usr/src/app/config \
            -v ${{ github.workspace }}/notes:/usr/src/app/notes \
            -v ${{ github.workspace }}/todo.txt:/usr/src/app/todo.txt \
            -v ${{ github.workspace }}/.git:/usr/src/app/.git \
            -v ${{ github.workspace }}/tests:/usr/src/app/tests \
            ghcr.io/${{ github.repository_owner }}/blot:test-${{ github.sha }} \
            sh -c "node ./app/documentation/build/index.js --no-watch --skip-zip && node tests && npx depcheck --ignores=depcheck,nyc,nodemon,blessed-contrib,fontkit,text-to-svg --skip-missing"

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build amd64 production image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          target: prod
          push: true
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/blot
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/blot,mode=max
          tags: ghcr.io/${{ github.repository_owner }}/blot:${{ github.sha }}-pending

  release:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Re-tag the production image for release
        run: |
          docker pull ghcr.io/${{ github.repository_owner }}/blot:${{ github.sha }}-pending
          docker tag ghcr.io/${{ github.repository_owner }}/blot:${{ github.sha }}-pending ghcr.io/${{ github.repository_owner }}/blot:${{ github.sha }}
          docker push ghcr.io/${{ github.repository_owner }}/blot:${{ github.sha }}
          