name: Node tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [linux/amd64, linux/arm64]

    services:
      redis:
        image: redis:6
        ports:
          - 6379:6379

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile', '**/package-lock.json') }}-${{ matrix.architecture }}
          restore-keys: |
            ${{ runner.os }}-docker-${{ matrix.architecture }}-

      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          target: builder
          tags: my-node-app-builder:latest
          load: true
          platforms: ${{ matrix.architecture }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Get Redis network name
        id: redis_network
        run: echo "::set-output name=network_name::$(docker network ls --filter name=_default -q)"

      - name: Run tests in Docker container
        run: |
          docker run --rm \
            --platform ${{ matrix.architecture }} \
            --network name=${{ job.services.redis.network }} \
            -e BLOT_REDIS_HOST=redis \
            my-node-app-builder sh -c "\
              git config --global user.email 'you@example.com' && \
              git config --global user.name 'Your Name' && \
              node app/setup && npm test"
