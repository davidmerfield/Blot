access_log {{log_file}} test;

# This is used to determine whether the server is handling
# requests, don't remove it unless you change monit.rc too!
location = /health {
    return 200;
}

root {{cache_directory}};

# The caching folders include the protocol in the path, so that redirects
# from HTTP to HTTP can be handled at the Node.js application. 
# Use $request_uri if you want the query string also
# use $uri if you don't want the query string
set $permanent_cache /$host/$scheme/permanent$request_uri;

set $temporary_cache /$host/$scheme/temporary$request_uri;
set $temporary_cache_index /$host/$scheme/temporary$request_uri/index.html;

set $static /$host/static$request_uri;
set $blog_folder /$host/folder$request_uri;

location / {
  add_header 'Cache-Hit' 'true-cache-permanent' always;
  add_header 'Cache-Control' 'public, max-age=31536000' always;
  try_files $permanent_cache @static;
}

location @static {
  add_header 'Cache-Hit' 'true-static' always;
  add_header 'Cache-Control' 'public, max-age=31536000' always;
  try_files $static @temporary;
}

location @temporary {
  open_file_cache off;
  default_type text/html;
  add_header 'Cache-Control' 'no-cache' always;
  add_header 'Cache-Hit' 'true-cache-temporary' always;
  try_files $temporary_cache $temporary_cache_index @blog_folder;
}

location @blog_folder {
  open_file_cache off;
  add_header 'Cache-Control' 'no-cache' always;
  add_header 'Cache-Hit' 'true-blog-folder' always;
  try_files $blog_folder @blot;
}

location @blot {
  add_header 'Cache-Hit' 'false' always;
  {{> reverse-proxy.conf}}
}