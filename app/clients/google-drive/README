# Google Drive Client for Blot

This repository contains the code for Blot’s Google Drive Client, designed to handle all interactions with Google Drive for the Blot blogging platform. The client is responsible for managing shared folders, syncing changes, and facilitating smooth integration between Blot and Google Drive.

There are two 'apps', one external which requests the user's email address through the OAUTH flow.
The other is a 'service account' which has access to a Drive folder created by contact@blot.im

The service account creates a new site folder inside the Sites folder and then shares it with the user's email. I created 

## How It Works
	1.	User Authentication:
Users log in via Blot’s external app, which captures their Google email address.
	2.	Folder Creation and Sharing:
The internal Google Drive Client uses the captured email to:
	•	Create a folder in Blot’s Google Drive account.
	•	Share the folder with the user (role=editor).
	3.	Change Tracking and Syncing:
	•	Monitor the shared folder for changes using the Google Drive API.
	•	Sync updates, including file uploads, edits, and deletions, to Blot’s server.    

---

SHould we ask the user to share a folder with our email? This was it's a 'true' folder and doesn't show up in 'shared with me'.

How is storage usage affected by 'service accounts'?
- it seems like each service account gets its own storage quota of 15GB!?


## How to get credentials

1. Create a Google Account

2. Open the cloud console:

https://console.cloud.google.com

3. Go to 'Enabled APIs & services' and disable all APIs except:

Drive Activity API 					
Google Drive API 	

Do multiple service accounts share the same storage quota? If we upgrade the storage size and have this affect all service accounts?

4. Create service account

Service account name: Blot
Service account ID: drive-a

Add no permissions (skip, skip)

5. Create a key

Download the JSON and then run:

node app/clients/google-drive/scripts/parseCreds <jsonpath>

Copy/paste the output into the env file:
- in development: ~/Projects/blot/.env
- in production: /etc/blot/secrets.env

6. Reload the server