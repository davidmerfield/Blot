name: blot
services:
  node-app:
    image: blot
    build:
      context: .
      dockerfile: Dockerfile
      target: dev   # This line specifies which stage to build
    ports:
      - "8080:8080"
    depends_on:
      - redis
    environment:
      - DEBUG=${DEBUG}
      - BLOT_REDIS_HOST=redis
      - BLOT_HOST=local.blot
      - BLOT_IP=${BLOT_IP}
      - BLOT_SESSION_SECRET=${BLOT_SESSION_SECRET}
      - BLOT_WEBHOOKS_SECRET=${BLOT_WEBHOOKS_SECRET}
      - BLOT_STRIPE_KEY=${BLOT_STRIPE_KEY}
      - BLOT_STRIPE_SECRET=${BLOT_STRIPE_SECRET}
      - BLOT_STRIPE_PRODUCT=${BLOT_STRIPE_PRODUCT}
      - BLOT_PAYPAL_CLIENT_ID=${BLOT_PAYPAL_CLIENT_ID}
      - BLOT_PAYPAL_SECRET=${BLOT_PAYPAL_SECRET}
      - BLOT_PAYPAL_MONTHLY_4=${BLOT_PAYPAL_MONTHLY_4}
      - BLOT_PAYPAL_YEARLY_44=${BLOT_PAYPAL_YEARLY_44}
      - BLOT_PAYPAL_MONTHLY_5=${BLOT_PAYPAL_MONTHLY_5}
      - BLOT_PAYPAL_YEARLY_55=${BLOT_PAYPAL_YEARLY_55}
      - BLOT_DROPBOX_APP_KEY=${BLOT_DROPBOX_APP_KEY}
      - BLOT_DROPBOX_APP_SECRET=${BLOT_DROPBOX_APP_SECRET}
      - BLOT_DROPBOX_FULL_KEY=${BLOT_DROPBOX_FULL_KEY}
      - BLOT_DROPBOX_FULL_SECRET=${BLOT_DROPBOX_FULL_SECRET}
      - BLOT_GOOGLEDRIVE_ID=${BLOT_GOOGLEDRIVE_ID}
      - BLOT_GOOGLEDRIVE_SECRET=${BLOT_GOOGLEDRIVE_SECRET}
    volumes:
      - ./data:/usr/src/app/data
      - ./.git:/usr/src/app/.git
      - ./app:/usr/src/app/app
      - ./tests:/usr/src/app/tests
      - ./notes:/usr/src/app/notes
      - ./scripts:/usr/src/app/scripts
      - ./todo.txt:/usr/src/app/todo.txt
      - ./config:/usr/src/app/config
    # this is needed so the webhook relay can invoke the request 
    # inside docker, resolving the host to the correct IP
    extra_hosts:
      - "${BLOT_HOST}:${HOST_IP}"
    command: npx nodemon /usr/src/app/app/local.js --watch /usr/src/app/app -e js,html,css --ignore /usr/src/app/app/documentation/data --ignore /usr/src/app/app/documentation/output --ignore /usr/src/app/app/views  --ignore /usr/src/app/app/clients/*/views

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - "./data:/data"

  openresty:
    build: 
      context: config/openresty
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    cap_add:
      - SYS_NICE
    environment:
      NODE_SERVER_IP: 127.0.0.1
      LUA_PACKAGE_PATH: /app/.luarocks/share/lua/5.1/?.lua;/app/conf/?.lua
      REDIS_IP: 127.0.0.1
      OPENRESTY_USER: root
      DISABLE_HTTP2: true
      OPENRESTY_LOG_DIRECTORY: /app/data/logs
      OPENRESTY_CACHE_DIRECTORY: /app/data/cache
      OPENRESTY_CONFIG_DIRECTORY: /app/data
      SSL_CERTIFICATE: /usr/local/openresty/nginx/selfsigned.crt
      SSL_CERTIFICATE_KEY: /usr/local/openresty/nginx/selfsigned.key
    depends_on:
      - redis