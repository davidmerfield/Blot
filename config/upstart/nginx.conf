# NGINX and upstart don't seem to work well together, I believe
# because of the way that NGINX daemonizes itself. I took most of
# this script from this answer on serverfault. It's pretty hacky
# but it seems to work and allows monit to restart the nginx service
# if needed. And also allows me to restart the nginx service if needed
# https://serverfault.com/questions/143461/how-can-i-start-nginx-via-upstart/514314#514314

# Here is the upstart bug which the answer references:
# https://bugs.launchpad.net/upstart/+bug/406397

description "nginx"

# redis starts when it can
# blot starts when redis is started
# nginx & monit (me!) start when blot is started

start on started blot
stop on shutdown

env DAEMON=/usr/local/openresty/bin/openresty
env PID=/var/run/nginx.pid
env CONF=/var/www/blot/config/nginx/server.conf
env LOG=/var/www/blot/logs/sys.log

respawn

pre-start script
$DAEMON -s stop 2> /dev/null || true
$DAEMON -t -c $CONF > /dev/null
$DAEMON -c $CONF >> $LOG 2>&1
echo "[`date -u +%Y-%m-%dT%T.%3NZ`] Starting nginx" >> $LOG
end script

script
sleepWhileAppIsUp(){
    while pidof $1 >/dev/null; do
    sleep 1
    done
}
sleepWhileAppIsUp $DAEMON
end script

pre-stop script
    echo "[`date -u +%Y-%m-%dT%T.%3NZ`] Stopping nginx" >> $LOG
end script

post-stop script
if pidof > /dev/null $DAEMON;
then
    $DAEMON -s stop
fi
end script

