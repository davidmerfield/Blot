add_header 'Blot-Server' '{{server_label}}' always;
add_header 'Blot-Cache' $upstream_cache_status always;
add_header 'Blot-Upstream' $upstream_addr always;

# if ($remote_addr = '79.35.122.153') {
#     set $upstream_server blot_node_containerized;
# }

proxy_pass http://$upstream_server;
proxy_http_version 1.1;

proxy_set_header Host $host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;
proxy_set_header X-Request-ID $request_id;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection $http_connection;  # Use $http_connection for better dynamic handling
# We let nginx handle the compression
proxy_set_header Accept-Encoding "";

gzip on;
gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
gzip_comp_level 6;
gzip_proxied any;

proxy_redirect off;

# Enable retrying the next upstream on failure
proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504 http_429 non_idempotent;

# Fine-tune timeouts for better failover
proxy_connect_timeout 3s;  # Time to establish a connection to the upstream
proxy_send_timeout 10s;    # Time to send the request to the upstream
proxy_read_timeout 15s;    # Time to read the response from the upstream
