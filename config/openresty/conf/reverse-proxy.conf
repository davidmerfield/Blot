add_header 'Blot-Server' '{{server_label}}' always;
add_header 'Blot-Cache' $upstream_cache_status always;
add_header 'Blot-Upstream' $upstream_addr always;

proxy_pass http://$upstream_server;
proxy_http_version 1.1;

proxy_set_header Host $host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;
proxy_set_header X-Request-ID $request_id;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection $http_connection;  # Use $http_connection for better dynamic handling
# We let nginx handle the compression
proxy_set_header Accept-Encoding "";

gzip on;
gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
gzip_comp_level 6;
gzip_proxied any;

# For larger responses (blog posts, content-heavy pages)
# Configured for 2MB total buffer size
proxy_buffers 32 64k;        # 2MB total (32 * 64k = 2048k)
proxy_buffer_size 64k;

proxy_redirect off;

proxy_intercept_errors on;
error_page 500 502 503 504 429 /error-upstream-offline.html;

# Enable retrying the next upstream on failure
# Important to limit the number of tries and possibly
# the timeout otherwise a single request which triggers an error could take down all the servers
# We do rolling deploys where one server is taken down at a time so this should allow 
# a failover in that case. Expensive or bug-triggering requests should consistently failwhale
# You have to be careful that these error codes are only returned when the server is truly
# unavailable – I ran into a nasty bug where a request that should have lead to a 404 was return
# a 500 error code, and this config considered the upstream server bad!
proxy_next_upstream error timeout invalid_header http_502 http_503 http_504;
proxy_next_upstream_tries 1;
proxy_next_upstream_timeout 10s;

# Fine-tune timeouts for better failover
proxy_connect_timeout 3s;  # Time to establish a connection to the upstream
proxy_send_timeout 10s;    # Time to send the request to the upstream
proxy_read_timeout 15s;    # Time to read the response from the upstream
