# The "auto_ssl" shared dict should be defined with enough storage space to
# hold your certificate data. 1MB of storage holds certificates for
# approximately 100 separate domains. Note that this should not cause an
# error if there are too many domains, just that nginx will have to look
# up the certificate in the database which is slower.
lua_shared_dict auto_ssl 100m;

# The "auto_ssl" shared dict is used to temporarily store various settings
# like the secret used by the hook server on port 8999. Do not change or
# omit it.
lua_shared_dict auto_ssl_settings 64k;

# A DNS resolver must be defined for OCSP stapling to function.
#
# This example uses Google's DNS server. You may want to use your system's
# default DNS servers, which can be found in /etc/resolv.conf. If your network
# is not IPv6 compatible, you may wish to disable IPv6 results by using the
# "ipv6=off" flag (like "resolver 8.8.8.8 ipv6=off").
# https://github.com/auto-ssl/lua-resty-auto-ssl/issues/12#issuecomment-259402817
# found by running cat /etc/resolv.conf and looking for the nameserver value
resolver 8.8.8.8 ipv6=off;

init_worker_by_lua_block {
  auto_ssl:init_worker()
}

# Internal server running on port 8999 for handling certificate tasks.
server {

  listen 127.0.0.1:8999;

  # Increase the body buffer size, to ensure the internal POSTs can always
  # parse the full POST contents into memory.
  client_body_buffer_size 128k;
  client_max_body_size 128k;

  location / {
    content_by_lua_block {
      auto_ssl:hook_server()
    }
  }
}