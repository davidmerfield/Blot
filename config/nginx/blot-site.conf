root /;

error_page 502 /error-proxy-502.html;

location = /error-proxy-502.html {
  root  /var/www/blot/app/brochure/views;
}

# The caching folders include the protocol in the path, so that redirects
# from HTTP to HTTP can be handled at the Node.js application. I figure
# this isn't important here so we have no protocol in the folder structure
# use $request_uri if you want the query string also
# use $uri if you don't want the query string
set $permanent_cache /cache/$host/$scheme/permanent$request_uri;
set $temporary_cache /cache/$host/$scheme/temporary$request_uri;
set $temporary_cache_index /cache/$host/$scheme/temporary$request_uri/index.html;

# Stores the files served at the CDN route
set $static_directory /var/www/blot/static;

# Stripe also sets a cookie so you can't just check if a cookie
# exists, you have to check for the type of cookie set by Express
# which handles Blot's dashboard sessions. 
# We don't want to deliver cached pages for public sites to logged 
# in users. Ideally in future we do something like dashboard.blot.com
# so we don't need to check if this is set or serve different things
# to logged-in and logged out users
if ($cookie_connect.sid) {
  set $permanent_cache false;
  set $temporary_cache false;
  set $temporary_cache_index false;
}

# Example CDN url: https://blot.im/cdn/blog_xyz/_image/name.jpg
# needs everything after '/cdn' to be looked up inside the static
# files directory in /var/www/blot/static. It might be nice
# in future to use cdn.blot.im as the back-end so that we don't
# need this regex here to capture the path, we can just use the URI
# Previously we also looked up $permanent_cache but that doesn't make
# any sense to me – is there a reason to do that?
location ~ /cdn(.*)$ {
  add_header 'Cache-Hit' 'true-cdn' always;
  add_header 'Cache-Control' 'public, max-age=31536000' always;
  add_header 'Access-Control-Allow-Origin' '*';
  try_files $static_directory$1 @blot;
}

# This is used to determine whether the server is handling
# requests, don't remove it unless you change monit.rc too!
location = /health {
  return 200;
}

# This is where we send server-sent events
# which need a long timeout
location = /status {
  proxy_read_timeout 24h;
  include /var/www/blot/config/nginx/reverse-proxy.conf;  
}

# allow uploads of files up to 250mb, this needs
# to be enough to handle big git pushes can we make
# the git push route larger and restrict everything else?
location = /settings {
  client_max_body_size 150M;
  include /var/www/blot/config/nginx/reverse-proxy.conf;  
}

# We want the people using the git client to be able to 
# make large commits but perhaps we rate limit them 
# to make sure the server isn't locked up?
location /clients/git/end/ {
  client_max_body_size 1000M;
  # will only affect pulls, since you can't limit upload rate by default
  # use this to limit pushes
  # https://www.nginx.com/resources/wiki/modules/upload/
  limit_rate_after 150m;
  limit_rate 3m;
  include /var/www/blot/config/nginx/reverse-proxy.conf;  
}

location / {
  add_header 'Cache-Hit' 'true-permanent' always;
  add_header 'Cache-Control' 'public, max-age=31536000' always;
  try_files $permanent_cache @temporary;
}

location @temporary {
  open_file_cache off;
  default_type text/html;  
  add_header 'Cache-Control' 'no-cache' always;
  add_header 'Cache-Hit' 'true' always;
  try_files $temporary_cache $temporary_cache_index @blot;
}

location @blot {
  include /var/www/blot/config/nginx/reverse-proxy.conf;
}