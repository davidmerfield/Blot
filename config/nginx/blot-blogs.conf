root /;

# This is used to determine whether the server is handling
# requests, don't remove it unless you change monit.rc too!
location = /health {
  return 200;
}


# The caching folders include the protocol in the path, so that redirects
# from HTTP to HTTP can be handled at the Node.js application. 
# Use $request_uri if you want the query string also
# use $uri if you don't want the query string
set $permanent_cache $cache_directory/$host/$scheme/permanent$request_uri;

set $temporary_cache $cache_directory/$host/$scheme/temporary$request_uri;
set $temporary_cache_index $cache_directory/$host/$scheme/temporary$request_uri/index.html;

set $static $cache_directory/$host/static$request_uri;
set $blog_folder $cache_directory/$host/folder$request_uri;

location / {
  add_header 'Blot-Cache' 'true-cache-permanent' always;
  add_header 'Cache-Control' 'public, max-age=31536000' always;
  try_files $permanent_cache @static;
}

location @static {
  add_header 'Blot-Cache' 'true-static' always;
  add_header 'Cache-Control' 'public, max-age=31536000' always;
  try_files $static @temporary;
}

location @temporary {
  open_file_cache off;
  default_type text/html;
  add_header 'Cache-Control' 'no-cache' always;
  add_header 'Blot-Cache' 'true-cache-temporary' always;
  try_files $temporary_cache $temporary_cache_index @blog_folder;
}

location @blog_folder {
  open_file_cache off;
  add_header 'Cache-Control' 'no-cache' always;
  add_header 'Blot-Cache' 'true-blog-folder' always;
  try_files $blog_folder @blot;
}

location @blot {
  add_header 'Blot-Cache' 'false' always;
  include /var/www/blot/config/nginx/reverse-proxy.conf;
}

# This is used to prevent people from accessing the git repositories in user folders
# We basically pass these requests directly to the node server where they are treated
# as 404s. This needs to be in both blot-blog.conf and blot-site.conf because it seems
# all requests hit the blot-site.conf cache layer first?
location ^~ /.git {
  include /var/www/blot/config/nginx/reverse-proxy.conf;
}
