root /;

# Disable etags from NGINX
etag off;

# For some reason, I was only able to *reduce* 
# the client_max_body_size in location blocks
# rather than raise it, so we start by setting
# an extremely high max POST size here, then
# reduce it where needed in the locations below
client_max_body_size 1000M;

# Stores the files served at the CDN route

# This route contains blog-specific files, e.g. thumbnails and cached images
set $static_directory $blot_directory/static$request_uri;

# This route contains files which are shared between blogs, e.g. fonts
set $global_static_directory $blot_directory/app/blog/static$request_uri;

error_page 404 /error-404.html;

# Example CDN url: https://blot.im/cdn/blog_xyz/_image/name.jpg
# needs everything after '/cdn' to be looked up inside the static
# files directory in /var/www/blot/static. It might be nice
# in future to use cdn.blot.im as the back-end so that we don't
# need this regex here to capture the path, we can just use the URI
# Previously we also looked up $permanent_cache but that doesn't make
# any sense to me â€“ is there a reason to do that?
location / {
  add_header 'Blot-Cache' 'true-cdn-new' always;
  add_header 'Cache-Control' 'public, max-age=31536000' always;
  add_header 'Access-Control-Allow-Origin' '*';
  client_max_body_size 1M;
  gzip on;
  try_files $static_directory $global_static_directory =404;
}

# redirect the index page to $blot_host
# permanently
location = / {
  return 302 https://$blot_host;
}

location = /robots.txt {
  return 200 "User-agent: *\nAllow: /\n";
}

# send the file $blot_directory/app/views/favicon.ico
location = /favicon.ico {
    root $blot_directory/app/views;    
}

location = /error-404.html {
    root  $blot_directory/app/views;
}
